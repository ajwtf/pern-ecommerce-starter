version: "3.8"

services:
  server:
    image: pern-ecommerce-server
    container_name: pern-ecommerce-server
    build:
      context: ./server
      dockerfile: Dockerfile
    # restart: always
    env_file:
      - ./server/.env
    environment:
      - POSTGRES_HOST=pern-ecommerce-db
      - POSTGRES_DB=pernecommerce
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=adminuser
    volumes:
      # Maps the server directory to
      # the working directory in the container
      - ./server:/usr/src/app
      # Maps the node_modules directory to
      # the working directory in the container
      # and also fixes bcrypt error
      - /usr/src/app/node_modules
    ports:
      - 9000:9000
    depends_on:
      - database
  client:
    image: pern-ecommerce-client
    container_name: pern-ecommerce-client
    restart: unless-stopped
    env_file:
      - ./client/.env
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
  database:
    container_name: pern-ecommerce-db
    image: postgres
    restart: always
    env_file:
      - ./server/.env
    environment:
      # other environment variables is in ./server/.env file
      - POSTGRES_PASSWORD=adminuser
    ports:
      - 7890:5432
    volumes:
      - ./db:/var/lib/postgresql/data
      # When the PostgreSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory
      # seed the database with the init.sql file
      - ./server/config/init.sql:/docker-entrypoint-initdb.d/init.sql
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "arnoldsouth@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "qweasdzxc"
    ports:
      - "16543:80"
    depends_on:
      - database
volumes:
  db:
    driver: local
